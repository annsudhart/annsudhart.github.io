{"version":3,"sources":["components/Navbar.js","components/Arrow.js","components/Card.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","href","id","viewBox","fill","strokeMiterlimit","x1","y1","x2","y2","React","Component","Arrow","Card","props","text","App","style","alt","src","target","sourceType","screenName","options","width","height","margin","async","charSet","role","aria-label","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2ca2726f.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Navbar.css';\r\n\r\nclass Navbar extends React.Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand\" href=\"\">\r\n                <a href=\"#\" className=\"navbar-brand navbar-item\">Andrea Sudharta</a>\r\n                <div className=\"menu-icon navbar-item\">\r\n                    <svg id=\"hamburger-icon\" viewBox=\"0 0 24 18\">\r\n                        <line fill=\"none\" strokeMiterlimit=\"10\" x1=\"0\" y1=\"2\" x2=\"24\" y2=\"2\"></line>\r\n                        <line fill=\"none\" strokeMiterlimit=\"10\" x1=\"0\" y1=\"9\" x2=\"24\" y2=\"9\"></line>\r\n                        <line fill=\"none\" strokeMiterlimit=\"10\" x1=\"0\" y1=\"16\" x2=\"24\" y2=\"16\"></line>\r\n                    </svg>\r\n                </div>\r\n                <ul>\r\n                    <li className=\"navbar-list navbar-item\"><a href=\"#about-me\">Projects</a></li>\r\n                    <li className=\"navbar-list navbar-item\"><a href=\"#more\">About Me</a></li>\r\n                    <li className=\"navbar-list navbar-item\"><a href=\"#contact\">Contact</a></li>\r\n                    <li className=\"navbar-list navbar-item\"><a href=\"resume.pdf\">Resume</a></li>\r\n                    <li className=\"navbar-list navbar-item\"><a href=\"https://github.com/annsudhart\">GitHub</a></li>\r\n                </ul>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport './Arrow.css';\r\nclass Arrow extends React.Component {\r\n    render() {\r\n        return (\r\n            <div id=\"arrow-container\">\r\n                <a href=\"#about-me\">\r\n                    <div id=\"arrow\"></div>\r\n                </a>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Arrow;","import React from 'react';\r\nimport './Card.css';\r\n\r\nfunction Card(props) {\r\n    return (\r\n        <li>\r\n            <a  className=\"flex-item animated fadeInUp\"\r\n                id={props.id}\r\n                href={props.href}\r\n            >\r\n                {props.text}\r\n            </a>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Arrow from './components/Arrow';\nimport Card from './components/Card';\nimport {TwitterTimelineEmbed} from 'react-twitter-embed';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      \n      <Navbar/>\n      <section className=\"splash\">\n        \n        <div id=\"bkgd-img-splash\">\n          <div style={{\"backgroundImage\": \"url('/media/Liquid-Inv1.svg')\", \"marginTop\": \"70px\"}}></div>\n          <div style={{\"backgroundImage\": \"url('/media/Liquid-Inv2.svg')\", \"marginTop\": \"50px\"}}></div>\n          <div style={{\"backgroundImage\": \"url('/media/Liquid-Inv3.svg')\"}}></div>\n        </div>\n        <div className=\"splash-container w-100 h-100\">\n          <div className=\"row\">\n            <div>\n              <h1>Welcome</h1>\n              <p>Nice to meet you. My name is Andrea Sudharta.</p>\n              <Arrow/>\n            </div>\n          </div>\n          <div className=\"row\">\n            <img id=\"splashimg\" alt=\"\" src=\"/media/splash_image.svg\"/>\n          </div>\n        </div>\n      </section>\n      <section id=\"about-me\" className=\"about\">\n        <p>\n          Welcome to my webpage! I'm Andrea, a third year student in\n          UC San Diego studying Math-CS. My interests lie in the intersection\n          between human computer interaction and data. Currently, I am a data programmer for the UCSD School of Medicine.\n        </p>\n        <a target=\"_blank\" href=\"resume.pdf\" className=\"resume-btn\">\n          View my resume\n        </a>\n        <h2>Projects</h2>\n        <ul className=\"flex-container\">\n          \n          <Card id=\"maze-rescue\" href=\"http://maze-rescue.com\" text=\"Maze Rescue\"/>\n          <Card id=\"truther-tweet\" href=\"https://github.com/annsudhart/truther-tweet\" text=\"US Politician+Twitter Analysis\"/>\n          <Card id=\"card-connect\" href=\"https://a10-cardconnect.herokuapp.com/\" text=\"Card Connect\"/>\n          <Card id=\"computing-paths\" href=\"http://computingpaths.ucsd.edu\" text=\"Computing Paths\"/>\n          <Card id=\"carbon-calc\" href=\"https://github.com/absambam/Carbon-Footprint-Calculator/\" text=\"Carbon Footprint Calculator\"/>\n          <Card id=\"any-a\" href=\"https://annsudhart.github.io/hackxx2018/\" text=\"ANY-A\"/>\n        \n        </ul>\n      </section>\n      <section id=\"moreDivider\" className=\"moreDivider\">\n        <h1>Community Involvement and More</h1>\n        <img alt=\"teamwork\" src=\"/media/community.svg\"/>\n        <p>\n          I am also striving to improve my leadership skills as a chair of \n          my college's residence hall council. Furthermore, I am attending \n          hackathons and technology related events in order to connect with \n          the tech world and improve my skills. Last year, I won first place \n          in HackXX 2018, a hackathon I went to last year.\n        </p>\n      </section>\n      <section className=\"more\">\n        <h2>Hackathons I've been to</h2>\n        <div className=\"hex-wrapper\">\n          <ul>\n            <li>\n              <div className=\"hexagon\" \n                  style={{\"backgroundImage\": \"url('/media/sdhacks-logo.svg')\"}}></div>\n              SDHacks 2018\n            </li>\n            <li>\n              <div className=\"hexagon\"\n                  style={{\"backgroundImage\": \"url('/media/hackxx-logo.svg')\", \"backgroundColor\": \"#941470\", \"backgroundSize\": \"70%\"}}></div>\n              HackXX 2018, 2019\n            </li>\n            <li>\n              <div className=\"hexagon\"\n                  style={{\"backgroundImage\": \"url('/media/rosehack-logo.png')\", \"backgroundSize\": \"130%\"}}></div>\n              Rose Hack 2019\n            </li>\n            <li>\n              <div className=\"hexagon\"\n                  style={{\"backgroundImage\": \"url('/media/spectra-logo.png')\"}}></div>\n              Spectra 2.0\n            </li>\n          </ul>\n        </div>\n        <h2>Follow me on social media</h2>\n        <div className=\"twitter-frame\">\n          <TwitterTimelineEmbed\n            sourceType=\"profile\"\n            screenName=\"SudhartaAndrea\"\n            options={{width: 600, height: 800, margin: 20}}\n          />\n        </div>\n        <script async src=\"https://platform.twitter.com/widgets.js\" \n                charSet=\"utf-8\"></script>\n      </section>\n      <section id=\"contact\" className=\"contact\">\n        <h2>Contact</h2>\n        <ul>\n          <li>\n            <a href=\"mailto:sudharta.andrea@gmail.com\">\n              <i className=\"contact-icon fas fa-envelope\" alt=\"email symbol\"></i>\n              Email: sudharta.andrea@gmail.com\n            </a>\n          </li>\n          <li>\n            <a href=\"https://github.com/annsudhart\">\n              <i className=\"contact-icon fab fa-github\"  alt=\"github symbol\"></i>\n              Twitter: @SudhartaAndrea\n            </a>\n          </li>\n          <li>\n            <a href=\"https://twitter.com/SudhartaAndrea\">\n              <i className=\"contact-icon fab fa-twitter\"  alt=\"twitter symbol\"></i>\n              Github: annsudhart\n            </a>\n          </li>\n        </ul>\n        <p>Made with <span role=\"img\" aria-label=\"care\">💙</span> and <span role=\"img\" aria-label=\"tacos\">🌮</span> using ReactJS. No robots were harmed in the creation of this website ✌️</p>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}