{"version":3,"sources":["components/Navbar.js","components/Arrow.js","components/Card.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","href","id","viewBox","fill","strokeMiterlimit","x1","y1","x2","y2","React","Component","Arrow","Card","props","text","App","alt","src","style","target","sourceType","screenName","options","width","height","margin","async","charSet","role","aria-label","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8d99537a.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Navbar.css';\r\n\r\nclass Navbar extends React.Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand\" href=\"\">\r\n                <a href=\"#\" className=\"navbar-brand navbar-item\">Andrea Sudharta</a>\r\n                <div className=\"menu-icon navbar-item\">\r\n                    <svg id=\"hamburger-icon\" viewBox=\"0 0 24 18\">\r\n                        <line fill=\"none\" strokeMiterlimit=\"10\" x1=\"0\" y1=\"2\" x2=\"24\" y2=\"2\"></line>\r\n                        <line fill=\"none\" strokeMiterlimit=\"10\" x1=\"0\" y1=\"9\" x2=\"24\" y2=\"9\"></line>\r\n                        <line fill=\"none\" strokeMiterlimit=\"10\" x1=\"0\" y1=\"16\" x2=\"24\" y2=\"16\"></line>\r\n                    </svg>\r\n                </div>\r\n                <ul>\r\n                    <li className=\"navbar-list navbar-item\"><a href=\"#about-me\">Projects</a></li>\r\n                    <li className=\"navbar-list navbar-item\"><a href=\"#more\">About Me</a></li>\r\n                    <li className=\"navbar-list navbar-item\"><a href=\"#contact\">Contact</a></li>\r\n                    <li className=\"navbar-list navbar-item\"><a href=\"resume.pdf\">Resume</a></li>\r\n                    <li className=\"navbar-list navbar-item\"><a href=\"https://github.com/annsudhart\">GitHub</a></li>\r\n                </ul>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport './Arrow.css';\r\nclass Arrow extends React.Component {\r\n    render() {\r\n        return (\r\n            <div id=\"arrow-container\">\r\n                <a href=\"#about-me\">\r\n                    <div id=\"arrow\"></div>\r\n                </a>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Arrow;","import React from 'react';\r\nimport './Card.css';\r\n\r\nfunction Card(props) {\r\n    return (\r\n        <li>\r\n            <a  className=\"flex-item animated fadeInUp\"\r\n                id={props.id}\r\n                href={props.href}\r\n            >\r\n                {props.text}\r\n            </a>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar';\r\nimport Arrow from './components/Arrow';\r\nimport Card from './components/Card';\r\nimport {TwitterTimelineEmbed} from 'react-twitter-embed';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      \r\n      <Navbar/>\r\n      <section className=\"splash\">\r\n        <div className=\"splash-container w-100 h-100\">\r\n          <div className=\"row\">\r\n            <div>\r\n              <h1>Welcome</h1>\r\n              <p>Nice to meet you. My name is Andrea Sudharta.</p>\r\n              <p className=\"learn-more\">Check out my work!</p>\r\n              <Arrow/>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <img id=\"splashimg\" alt=\"\" src=\"/media/splash_image.svg\"/>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <section id=\"about-me\" className=\"about\">\r\n        <p>\r\n          Welcome to my webpage! I'm Andrea, a third year student in\r\n          UC San Diego studying Math-CS. My interests lie in the intersection\r\n          between <span style={{\"color\": \"rgb(37, 178, 244)\"}}>human computer interaction</span> and <span style={{\"color\": \"rgb(75, 75, 255)\"}}>data</span>. \r\n          Currently, I am a data programmer for the UCSD School of Medicine and will intern at Verizon Media over the summer.\r\n        </p>\r\n        <a target=\"_blank\" href=\"resume.pdf\" className=\"resume-btn\">\r\n          View my resume\r\n        </a>\r\n        <h2>Projects</h2>\r\n        <ul className=\"flex-container\">\r\n          \r\n          <Card id=\"maze-rescue\" href=\"http://maze-rescue.com\" text=\"Maze Rescue\"/>\r\n          <Card id=\"truther-tweet\" href=\"https://github.com/annsudhart/truther-tweet\" text=\"US Politician+Twitter Analysis\"/>\r\n          <Card id=\"card-connect\" href=\"https://a10-cardconnect.herokuapp.com/\" text=\"Card Connect\"/>\r\n          <Card id=\"computing-paths\" href=\"http://computingpaths.ucsd.edu\" text=\"Computing Paths\"/>\r\n          <Card id=\"carbon-calc\" href=\"https://github.com/absambam/Carbon-Footprint-Calculator/\" text=\"Carbon Footprint Calculator\"/>\r\n          <Card id=\"any-a\" href=\"https://annsudhart.github.io/hackxx2018/\" text=\"ANY-A\"/>\r\n        \r\n        </ul>\r\n      </section>\r\n      <section id=\"moreDivider\" className=\"moreDivider\">\r\n        <h1>Community Involvement and More</h1>\r\n        <img alt=\"teamwork\" src=\"/media/community.svg\"/>\r\n        <p>\r\n          I am also striving to improve my leadership skills, whether if it is\r\n          as the chair of my college's residence hall council, or as an organizer\r\n          for SD Hacks, an annual hackathon at UC San Diego. Furthermore, I am attending \r\n          hackathons and technology related events in order to connect with \r\n          the tech world and improve my skills. I won first place \r\n          in HackXX 2018 and won best Google Cloud Hack at Rose Hack 2019.\r\n        </p>\r\n      </section>\r\n      <section className=\"more\">\r\n        <h2>Hackathons I've been to</h2>\r\n        <div className=\"hex-wrapper\">\r\n          <ul>\r\n            <li>\r\n              <div className=\"hexagon\" \r\n                  style={{\"backgroundImage\": \"url('/media/sdhacks-logo.svg')\"}}></div>\r\n              SDHacks 2018\r\n            </li>\r\n            <li>\r\n              <div className=\"hexagon\"\r\n                  style={{\"backgroundImage\": \"url('/media/hackxx-logo.svg')\", \"backgroundColor\": \"#941470\", \"backgroundSize\": \"70%\"}}></div>\r\n              HackXX 2018, 2019\r\n            </li>\r\n            <li>\r\n              <div className=\"hexagon\"\r\n                  style={{\"background\": \"url('/media/rosehack-logo.png'), #a588bf\", \"backgroundSize\": \"140%\"}}></div>\r\n              Rose Hack 2019\r\n            </li>\r\n            <li>\r\n              <div className=\"hexagon\"\r\n                  style={{\"backgroundImage\": \"url('/media/spectra-logo.png')\"}}></div>\r\n              Spectra 2.0\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <h2>Follow me on social media</h2>\r\n        <div className=\"twitter-frame\">\r\n          <TwitterTimelineEmbed\r\n            sourceType=\"profile\"\r\n            screenName=\"SudhartaAndrea\"\r\n            options={{width: 600, height: 800, margin: 20}}\r\n          />\r\n        </div>\r\n        <script async src=\"https://platform.twitter.com/widgets.js\" \r\n                charSet=\"utf-8\"></script>\r\n      </section>\r\n      <section id=\"contact\" className=\"contact\">\r\n        <h2>Contact</h2>\r\n        <ul>\r\n          <li>\r\n            <a href=\"mailto:sudharta.andrea@gmail.com\">\r\n              <i className=\"contact-icon fas fa-envelope\" alt=\"email symbol\"></i>\r\n              Email: sudharta.andrea@gmail.com\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"https://www.linkedin.com/in/andrea-sudharta/\">\r\n              <i className=\"contact-icon fab fa-linkedin-in\"  alt=\"linkedin symbol\"></i>\r\n              LinkedIn: andrea-sudharta\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"https://github.com/annsudhart\">\r\n              <i className=\"contact-icon fab fa-github\"  alt=\"github symbol\"></i>\r\n              GitHub: annsudhart\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"https://twitter.com/SudhartaAndrea\">\r\n              <i className=\"contact-icon fab fa-twitter\"  alt=\"twitter symbol\"></i>\r\n              Twitter: @SudhartaAndrea\r\n            </a>\r\n          </li>\r\n        </ul>\r\n        <p>Made with <span role=\"img\" aria-label=\"care\">💙</span> and <span role=\"img\" aria-label=\"tacos\">🌮</span> using ReactJS. No robots were harmed in the creation of this website ✌️</p>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}